{"ast":null,"code":"var _jsxFileName = \"/Users/lyssa/Desktop/Spring24/portfolio/src/components/MenuItems.tsx\",\n  _s = $RefreshSig$();\nimport Dropdown from './Dropdown';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MenuItems = ({\n  item\n}) => {\n  _s();\n  const [dropdown, setDropdown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"menu-items\",\n    children: item.submenu ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": dropdown ? \"true\" : \"false\",\n        onClick: () => setDropdown(prev => !prev),\n        children: [item.title, ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        submenus: item.submenu,\n        dropdown: dropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.url,\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(MenuItems, \"OxaoTJsszBDmSGYGKqcYc04UCMM=\");\n_c = MenuItems;\nexport default MenuItems;\nvar _c;\n$RefreshReg$(_c, \"MenuItems\");","map":{"version":3,"names":["Dropdown","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MenuItems","item","_s","dropdown","setDropdown","className","children","submenu","type","onClick","prev","title","fileName","_jsxFileName","lineNumber","columnNumber","submenus","href","url","_c","$RefreshReg$"],"sources":["/Users/lyssa/Desktop/Spring24/portfolio/src/components/MenuItems.tsx"],"sourcesContent":["import Dropdown from './Dropdown';\nimport { useState } from 'react';\n\ninterface SubmenuItemsProps {\n    title: string;\n    url: string;\n}\n\ninterface MenuItemsProps{\n    title: string;\n    url: string;\n    submenu?: SubmenuItemsProps[];\n}\ninterface ItemProps{\n  item: MenuItemsProps;\n}\nconst MenuItems: React.FC<ItemProps> = ({ item }) => {\n  const [dropdown, setDropdown] = useState(false);\n    return (\n      <li className=\"menu-items\">\n        {item.submenu ? (\n          <>\n            <button \n              type=\"button\" \n              aria-haspopup=\"menu\" \n              aria-expanded={dropdown ? \"true\": \"false\"}\n              onClick={() => setDropdown((prev) => !prev)}>\n                {item.title}{' '}\n            </button>\n            <Dropdown submenus={item.submenu} dropdown={dropdown} />\n          </>\n        ) : (\n          <a href={item.url}>{item.title}</a>\n        )}\n      </li>\n    );\n  };\n  \n  export default MenuItems;"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAejC,MAAMC,SAA8B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,oBACEE,OAAA;IAAIQ,SAAS,EAAC,YAAY;IAAAC,QAAA,EACvBL,IAAI,CAACM,OAAO,gBACXV,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACET,OAAA;QACEW,IAAI,EAAC,QAAQ;QACb,iBAAc,MAAM;QACpB,iBAAeL,QAAQ,GAAG,MAAM,GAAE,OAAQ;QAC1CM,OAAO,EAAEA,CAAA,KAAML,WAAW,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAE;QAAAJ,QAAA,GACzCL,IAAI,CAACU,KAAK,EAAE,GAAG;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACTlB,OAAA,CAACH,QAAQ;QAACsB,QAAQ,EAAEf,IAAI,CAACM,OAAQ;QAACJ,QAAQ,EAAEA;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACxD,CAAC,gBAEHlB,OAAA;MAAGoB,IAAI,EAAEhB,IAAI,CAACiB,GAAI;MAAAZ,QAAA,EAAEL,IAAI,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACb,EAAA,CApBEF,SAA8B;AAAAmB,EAAA,GAA9BnB,SAA8B;AAsBlC,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}